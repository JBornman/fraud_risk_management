# CircleCI v2.1 Config
version: 2.1

# Orbs list
# - Default circle ci node orb
orbs:
  node: circleci/node@3.0.0


# Defaults we will need
defaults_Dependencies: &defaults_Dependencies |
    apk --no-cache add git
    apk --no-cache add ca-certificates
    apk --no-cache add curl
    apk --no-cache add openssh-client
    apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake
    npm config set unsafe-perm true
    npm install -g node-gyp

defaults_license_scanner: &defaults_license_scanner
  name: Install and set up license-scanner
  command: |
    git clone https://github.com/mojaloop/license-scanner /tmp/license-scanner
    cd /tmp/license-scanner && make build default-files set-up


executors:
  default-docker:
    working_directory: /home/circleci/project
    docker:
      - image: node:12.16.1-alpine

  default-machine:
    machine:
      image: ubuntu-1604:201903-01

jobs:
  setup:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: path
          command: pwd
      - run:
          name: find
          command: find "$(cd ..; pwd)" -name "package.json"
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          name: Access npm folder as root
          command: cd transaction_simulator &&  cd $(npm root -g)/npm
      - run:
          name: NPM install
          command: cd transaction_simulator && npm i
      - run:
          name: Update NPM install
          command: cd transaction_simulator && npm ci
      - run:
          name: Delete build dependencies
          command: cd transaction_simulator &&  apk del build-dependencies
      - save_cache:
          key: dependency-cache-{{ checksum "transaction_simulator/package.json" }}
          paths:
            - node_modules
  build:
    executor: default-machine
    steps:
      - checkout
      - run:
          name: Build Docker $CIRCLE_TAG image
          command: |
            echo "Building Docker image: $CIRCLE_TAG"
            docker build -t $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG .
      - run:
          name: Save docker image to workspace
          command: docker save -o /tmp/docker-image.tar $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./docker-image.tar
  scan-license:
    executor: default-machine
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load the pre-built docker image from workspace
          command: docker load -i /tmp/docker-image.tar
      - run:
          <<: *defaults_license_scanner
      - run:
          name: Run the license-scanner
          command: cd /tmp/license-scanner && mode=docker dockerImages=$DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG make run
      - store_artifacts:
          path: /tmp/license-scanner/results
          # prefix: licenses

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - /feature*/
                - /bugfix*/
      - build:
          requires:
            - setup
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(\-snapshot)?(\-hotfix(\.[0-9]+))?/
            branches:
              ignore:
                - /.*/
      - scan-license:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(\-snapshot)?(\-hotfix(\.[0-9]+))?/
            branches:
              ignore:
                - /.*/
